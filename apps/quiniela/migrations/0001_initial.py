# Generated by Django 2.0.2 on 2018-06-13 17:42

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score_set', models.BooleanField(default=False)),
                ('score_home', models.CharField(default='0', max_length=5)),
                ('score_away', models.CharField(default='0', max_length=5)),
                ('match_datetime', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GameResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('score_home', models.CharField(default='0', max_length=5)),
                ('score_away', models.CharField(default='0', max_length=5)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quiniela.Game')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Profile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='GroupTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(default=0)),
                ('games_checked', models.IntegerField(default=0)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quiniela.Group')),
            ],
        ),
        migrations.CreateModel(
            name='MemberFixture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('games_checked', models.IntegerField(default=0)),
                ('score', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='OscarCoin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('value', models.IntegerField(default=0)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Quiniela',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('description', models.CharField(default='', max_length=150)),
                ('public', models.BooleanField(default=False)),
                ('score_type', models.CharField(choices=[('TO', 'Game Result Points.'), ('EA', 'Game Result and Teams Score Points.')], default='TO', max_length=2)),
                ('score_type_cache', models.CharField(choices=[('TO', 'Game Result Points.'), ('EA', 'Game Result and Teams Score Points.')], default='TO', editable=False, max_length=2)),
                ('quiniela_type', models.CharField(choices=[('TQ', 'Predict all games and scores.'), ('PQ', 'Predict just current phase games and scores.')], default='EA', max_length=2)),
                ('quiniela_type_cache', models.CharField(choices=[('TQ', 'Predict all games and scores.'), ('PQ', 'Predict just current phase games and scores.')], default='EA', editable=False, max_length=2)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Profile')),
                ('members', models.ManyToManyField(related_name='quiniela_members', to='users.Profile')),
                ('tags', models.ManyToManyField(blank=True, related_name='quiniela_tag', to='users.InterestTag')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=50, unique=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('history', models.CharField(default='', max_length=150)),
                ('tags', models.ManyToManyField(blank=True, related_name='team_tag', to='users.InterestTag')),
            ],
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('description', models.CharField(max_length=150, unique=True)),
                ('start_in', models.DateField(blank=True, null=True)),
                ('ends_in', models.DateField(blank=True, null=True)),
                ('fixture', models.ManyToManyField(blank=True, related_name='fixture_games', to='quiniela.Game')),
                ('members_results', models.ManyToManyField(related_name='members_fixture_games', through='quiniela.MemberFixture', to='users.Profile')),
                ('tags', models.ManyToManyField(blank=True, related_name='tournament_tag', to='users.InterestTag')),
            ],
        ),
        migrations.AddField(
            model_name='quiniela',
            name='tournament',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='quiniela.Tournament'),
        ),
        migrations.AddField(
            model_name='memberfixture',
            name='quiniela',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quiniela.Quiniela'),
        ),
        migrations.AddField(
            model_name='memberfixture',
            name='results',
            field=models.ManyToManyField(related_name='member_fixture_game_results', to='quiniela.GameResult'),
        ),
        migrations.AddField(
            model_name='memberfixture',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quiniela.Tournament'),
        ),
        migrations.AddField(
            model_name='memberfixture',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Profile'),
        ),
        migrations.AddField(
            model_name='groupteam',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quiniela.Team'),
        ),
        migrations.AddField(
            model_name='group',
            name='teams',
            field=models.ManyToManyField(related_name='group_teams', through='quiniela.GroupTeam', to='quiniela.Team'),
        ),
        migrations.AddField(
            model_name='group',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quiniela.Tournament'),
        ),
        migrations.AddField(
            model_name='game',
            name='away_team',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='away_team', to='quiniela.Team'),
        ),
        migrations.AddField(
            model_name='game',
            name='home_team',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='home_team', to='quiniela.Team'),
        ),
        migrations.AddField(
            model_name='game',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quiniela.Tournament'),
        ),
        migrations.AlterUniqueTogether(
            name='quiniela',
            unique_together={('admin', 'name', 'tournament')},
        ),
        migrations.AlterUniqueTogether(
            name='memberfixture',
            unique_together={('user', 'tournament', 'quiniela')},
        ),
        migrations.AlterUniqueTogether(
            name='groupteam',
            unique_together={('team', 'group')},
        ),
        migrations.AlterUniqueTogether(
            name='group',
            unique_together={('name', 'tournament')},
        ),
    ]
